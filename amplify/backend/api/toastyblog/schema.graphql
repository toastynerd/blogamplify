type Post 
  @model 
  @auth (
      rules: [
        { allow: groups, groups: ["authors"], operations: [create, read, update, delete] },
        { allow: groups, groups: ["readers", "commenters"], operations: [read] }
      ]
  ) {
  id: ID!
  publishedOn: AWSDateTime
  title: String!
  content: String!
  summary: String
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
  author: String!
}

type Comment 
  @model 
  @key(name: "byPost", fields: ["postID", "content"]) 
  @auth (
    rules: [
      { allow: groups, groups: ["authors", "commenters"], operations: [create, read, update, delete] },
      { allow: groups, groups: ["readers"], operations: [read] }
    ]
  ){
  id: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  content: String!
  author: String!
}

type Page @model  
  @auth (
    rules: [
      { allow: groups, groups: ["authors"], operations: [create, read, update, delete] },
      { allow: groups, groups: ["commenters", "readers"], operations: [read]}
    ]
  )
  {
  id: ID!
  name: String!
  content: String
}
